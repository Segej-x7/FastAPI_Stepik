
1. Создадим таблицы вручную через SQL
Выполните команду для создания таблиц напрямую в PostgreSQL (postgres - это имя!):

bash

docker exec -it fastapi_db psql -U postgres -d fastapi_db -c "
CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    email VARCHAR(100),
    hashed_password VARCHAR(100)
);
CREATE TABLE feedback (
    id SERIAL PRIMARY KEY,
    name VARCHAR(50),
    message TEXT,
    email VARCHAR(100),
    phone VARCHAR(20)
);
"


2. Проверим создание таблиц (postgres - это имя!)
bash
docker exec -it fastapi_db psql -U postgres -d fastapi_db -c "\dt"


3. Cоздать тестового пользователя:

powershell
curl -X POST "http://localhost/api/users/" `
-H "Content-Type: application/json" `
-d '{"username":"test_user", "email":"Test@user.ru", "password": "String_111"}'

4. Проверим список пользователей:

powershell
curl -X GET "http://localhost/api/users/"

================================================

Проверим добавление отзыва
powershell
curl -X POST "http://localhost/api/feedback/" `
-H "Content-Type: application/json" `
-d '{
    "name":"John Doe",
    "message":"Great service!",
    "email":"john@example.com",
    "phone":"+1234567890"
}'

Проверим список отзывов
powershell
curl -X GET "http://localhost/api/feedback/"


#===========================================================

Давайте подведём итог и разберём, что вы успешно сделали:

1. Создание пользователя (успешно)
powershell
curl -X POST "http://localhost/api/users/" `
  -H "Content-Type: application/json" `
  -d '{"username":"string_3", "email":"user@example.com", "password":"Papik1952"}'
Ответ: {"username":"string_3","email":"user@example.com"}

2. Получение токена (успешно)
powershell
curl -X POST "http://localhost/api/token" `
  -H "Content-Type: application/x-www-form-urlencoded" `
  -d "grant_type=password&username=string_100&password=Papik1952"
Получен токен:

text
eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJzdHJpbmdfMyIsImV4cCI6MTc1MjQ4MjEwMX0.znG5dGDee18lnriNb_-oGpR9oxivMOqjO6IxeeeCDqk
3. Доступ к защищённому эндпоинту (успешно)
powershell
curl -X GET "http://localhost/api/users/me" `
  -H "Authorization: Bearer $token" `
  -H "Content-Type: application/json"
Ответ:

json
{
  "username": "string_3",
  "email": "user@example.com",
  "hashed_password": "$2b$12$9kCXYZRpdWVRaHgohLhzsuP1lRDMZ7e/kv0io3njBdjaOl.l2w/Vi"
}
Что можно улучшить:
Не возвращайте хеш пароля в /api/users/me:
Измените response_model для этого эндпоинта, чтобы исключить hashed_password

Добавьте обработку ошибок:

При неверном пароле

При истечении срока токена

Попробуйте другие защищённые эндпоинты:

powershell
# Получить список всех пользователей
curl -X GET "http://localhost/api/users/" `
  -H "Authorization: Bearer $token" `
  -H "Content-Type: application/json"

# Создать отзыв
curl -X POST "http://localhost/api/feedback/" `
  -H "Authorization: Bearer $token" `
  -H "Content-Type: application/json" `
  -d '{"name":"Test", "message":"Great service!", "email":"test@example.com", "phone":"+1234567890"}'
Проверьте срок действия токена:
Ваш токен истекает через 30 минут (согласно ACCESS_TOKEN_EXPIRE_MINUTES)